/* This file was generated by SableCC (http://www.sablecc.org/). */

package tp6.node;

import tp6.analysis.*;

@SuppressWarnings("nls")
public final class ABinexpressionExpression extends PExpression
{
    private PBinexpression _binexpression_;

    public ABinexpressionExpression()
    {
        // Constructor
    }

    public ABinexpressionExpression(
        @SuppressWarnings("hiding") PBinexpression _binexpression_)
    {
        // Constructor
        setBinexpression(_binexpression_);

    }

    @Override
    public Object clone()
    {
        return new ABinexpressionExpression(
            cloneNode(this._binexpression_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABinexpressionExpression(this);
    }

    public PBinexpression getBinexpression()
    {
        return this._binexpression_;
    }

    public void setBinexpression(PBinexpression node)
    {
        if(this._binexpression_ != null)
        {
            this._binexpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._binexpression_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._binexpression_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._binexpression_ == child)
        {
            this._binexpression_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._binexpression_ == oldChild)
        {
            setBinexpression((PBinexpression) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

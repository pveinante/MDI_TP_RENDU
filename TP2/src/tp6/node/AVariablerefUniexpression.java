/* This file was generated by SableCC (http://www.sablecc.org/). */

package tp6.node;

import tp6.analysis.*;

@SuppressWarnings("nls")
public final class AVariablerefUniexpression extends PUniexpression
{
    private PVariableref _variableref_;

    public AVariablerefUniexpression()
    {
        // Constructor
    }

    public AVariablerefUniexpression(
        @SuppressWarnings("hiding") PVariableref _variableref_)
    {
        // Constructor
        setVariableref(_variableref_);

    }

    @Override
    public Object clone()
    {
        return new AVariablerefUniexpression(
            cloneNode(this._variableref_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariablerefUniexpression(this);
    }

    public PVariableref getVariableref()
    {
        return this._variableref_;
    }

    public void setVariableref(PVariableref node)
    {
        if(this._variableref_ != null)
        {
            this._variableref_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variableref_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._variableref_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._variableref_ == child)
        {
            this._variableref_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._variableref_ == oldChild)
        {
            setVariableref((PVariableref) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

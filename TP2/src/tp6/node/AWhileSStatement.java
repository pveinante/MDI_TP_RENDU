/* This file was generated by SableCC (http://www.sablecc.org/). */

package tp6.node;

import tp6.analysis.*;

@SuppressWarnings("nls")
public final class AWhileSStatement extends PStatement
{
    private PWhileS _whileS_;

    public AWhileSStatement()
    {
        // Constructor
    }

    public AWhileSStatement(
        @SuppressWarnings("hiding") PWhileS _whileS_)
    {
        // Constructor
        setWhileS(_whileS_);

    }

    @Override
    public Object clone()
    {
        return new AWhileSStatement(
            cloneNode(this._whileS_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAWhileSStatement(this);
    }

    public PWhileS getWhileS()
    {
        return this._whileS_;
    }

    public void setWhileS(PWhileS node)
    {
        if(this._whileS_ != null)
        {
            this._whileS_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._whileS_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._whileS_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._whileS_ == child)
        {
            this._whileS_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._whileS_ == oldChild)
        {
            setWhileS((PWhileS) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
